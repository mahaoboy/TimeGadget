<?xml version="1.0" encoding="UTF-8" ?><Module><ModulePrefs title="Average Spent Time" height="400" directory_title="Average Spent Time" description="Average Spent Time" author="winagile" author_affiliation="winagile" author_location="beijing" screenshot='#staticResourceUrl("com.winagile.gadget.TimeGadget:demogadget", "screenshot.png")' thumbnail='#staticResourceUrl("com.winagile.gadget.TimeGadget:demogadget", "thumb.png")'><Optional feature="gadget-directory"><Param name="categories">
				JIRA
				Charts
			</Param></Optional><Require feature="setprefs"/><Require feature="views"/><Optional feature="atlassian.util"/><Optional feature='auth-refresh'/><Require feature="settitle"/><Require feature="dynamic-height"/><Require feature="oauthpopup"/>
		#oauth
		#supportedLocales("gadget.common")
		<Locale><messagebundle><msg name="gadget.winagile.blue.icon">\u4e25\u91cd\u95ee\u9898\u89e3\u51b3\u65f6\u95f4</msg><msg name="gadget.winagile.red.icon">\u4e00\u822c\u95ee\u9898\u89e3\u51b3\u65f6\u95f4</msg><msg name="gadget.winagile.unit.name">\u90e8\u95e8\u5b57\u6bb5</msg><msg name="gadget.winagile.time.name">\u65f6\u95f4\u5b57\u6bb5</msg><msg name="gadget.winagile.issuetype.name">\u95ee\u9898\u7c7b\u578b</msg><msg name="gadget.winagile.prio.name">\u4f18\u5148\u7ea7\u5b57\u6bb5</msg><msg name="gadget.winagile.prio.desc">\u9009\u62e9\u4e25\u91cd\u95ee\u9898\u5bf9\u5e94\u503c\uff0c\u5176\u4ed6\u9ed8\
					u8ba4\u4e3a\u4e00\u822c\u95ee\u9898
				</msg><msg name="gadget.winagile.field.error">\u5b57\u6bb5\u9519\u8bef\u8bf7\u91cd\u9009</msg><msg name="gadget.winagile.title">\u5e73\u5747\u89e3\u51b3\u65f6\u95f4\u67f1\u72b6\u56fe
				</msg></messagebundle></Locale></ModulePrefs><UserPref name="isConfigured" datatype="hidden" default_value="false"/><UserPref name="refresh" datatype="hidden" default_value="false"/><UserPref name="isPopup" datatype="hidden" default_value="false"/><UserPref name="unitId" datatype="hidden"/><UserPref name="timeId" datatype="hidden"/><UserPref name="issuetypeId" datatype="hidden"/><UserPref name="priorityId" datatype="hidden"/><UserPref name="groupedOptions" datatype="hidden"/><Content type="html" view="profile,canvas,home">
        <![CDATA[

        #requireContext("com.atlassian.jira.gadgets:autocomplete")
        #includeResources()

        <script type="text/javascript">
            (function () {

                var gadget = AJS.Gadget({
                    baseUrl: "__ATLASSIAN_BASE_URL__",
                    useOauth: "/rest/gadget/1.0/currentUser",
                    config: {
                        descriptor: function (args) {
                            var gadget = this;
                            
                            return  {
                            	action: "/rest/myrestresource/1.0/message/validate",
                                theme : function () {
                                    if (gadgets.window.getViewportDimensions().width < 450){
                                        return "gdt top-label";
                                    } else{
                                        return "gdt";
                                    }
                                }(),
                                fields: [
                                    {
                                        userpref: "unitId",
                                        label: AJS.format("__MSG_gadget.winagile.unit.name__"),
                                        description: AJS.format("__MSG_gadget.winagile.unit.name__"),
                                        type: "select",
                                        selected: this.getPref("unitId"),
                                        options: args.cflist
                                    },
                                    {
                                        userpref: "timeId",
                                        label: AJS.format("__MSG_gadget.winagile.time.name__"),
                                        description: AJS.format("__MSG_gadget.winagile.time.name__"),
                                        type: "select",
                                        selected: this.getPref("timeId"),
                                        options: args.cflist
                                    },
                                    {
                                        userpref: "issuetypeId",
                                        label: AJS.format("__MSG_gadget.winagile.issuetype.name__"),
                                        description: AJS.format("__MSG_gadget.winagile.issuetype.name__"),
                                        type: "select",
                                        selected: this.getPref("issuetypeId"),
                                        options: args.itlist
                                    },
                                    {
                                        userpref: "priorityId",
                                        label: AJS.format("__MSG_gadget.winagile.prio.name__"),
                                        description: AJS.format("__MSG_gadget.winagile.prio.desc__"),
                                        type: "select",
                                        selected: this.getPref("priorityId"),
                                        options: args.priolist
                                    },
                                    {
								        userpref: "groupedOptions",
								        label: "xxx",
								        type: "select",
								        options:[
								            {
								                group: {
								                    label: "First Option Group",
								                    options: [
								                        {
								                            label: "First Group -> First Option",
								                            value: "group-1_opt-1",
								                        },
								                        {
								                            label: "First Group -> Second Option",
								                            value: "group-1_opt-2",
								                        }
								                    ]
								                }
								            },
								            { 
								                label:"No Group Options",
								                value:"group-N/A_opt-1"
								            },
								            {
								                group: {
								                    label: "Second Option Group",
								                    options: [
								                        {
								                            label: "Second Group -> First Option",
								                            value: "group-2_opt-1",
								                        }
								                    ]
								                }
								            }
								        ]
								    },
                                    AJS.gadget.fields.nowConfigured()
                                ]
                            };
                        },
                        args: [{
                            key: "cflist",
                            ajaxOptions:  "/rest/myrestresource/1.0/message/customfieldlist"
                        },
                        {
                            key: "itlist",
                            ajaxOptions:  "/rest/myrestresource/1.0/message/issuetypelist"
                        },
                        {
                            key: "priolist",
                            ajaxOptions:  "/rest/myrestresource/1.0/message/priolist"
                        }]
                    },
                    view: {
                        enableReload: true,
                        onResizeReload: true,
                        template: function (args) {
                            var gadget = this;

                            // reset view
                            gadget.getView().addClass("g-piechart");
                            gadget.getView().addClass("chart").empty();

                            var requiresTitle = function() {
                                return args.chart.filterTitle && args.chart.filterTitle !== "" && args.chart.filterTitle !== "gadget.common.anonymous.filter" && gadget.getPref("isPopup") === "false";
                            };

                            var setTitles = function () {
                                if (requiresTitle()){
                                    // This is used to pass the name of filter or project to the picker
                                    gadget.projectOrFilterName = args.chart.filterTitle;
                                    gadgets.window.setTitle(AJS.format("__MSG_gadget.winagile.title__"));
                                }
                            }();

                            var getChartContainer = function () {
                                var chart = AJS.$("<div id='chart' />").appendTo(gadget.getView());
                                return function () {
                                    return chart;
                                };
                            }();

                            var safeEscapeString = function(text) {
                                if(text) {
                                    return gadgets.util.escapeString(text);
                                } else {
                                    return '';
                                }
                            };

                            var getChartImg = function () {
                            	AJS.$("#chart", gadget.getView()).get(0).innerHTML += "<img style='display:none' src='" + args.chart.base64Image + "' alt='" + safeEscapeString(args.chart.filterTitle) + "' usemap='#" +
                                args.chart.imageMapName + "' height='" + args.chart.height + "' width='" + args.chart.width + "' />";
                                
                                gadget.getView().append(args.chart.imageMap);
                                gadget.showLoading();
                                var chartImg = AJS.$("img", getChartContainer());
                                AJS.$(chartImg, gadget.getView()).load(function () {
                                    AJS.$(this).show();
                                    gadget.hideLoading();
                                    gadget.resize();
                                });
                                return function () {
                                    return chartImg;
                                };
                            }();

                            var setSummary = function() {
                                var linkStart = "";
                                var linkEnd = "";
                                if(requiresTitle()) {
                                    linkStart = "<a href=\"__ATLASSIAN_BASE_URL__" + args.chart.filterUrl + "\" target=\"_parent\" title=\"" + safeEscapeString(args.chart.filterTitle) + "\">";
                                    linkEnd = "</a>";
                                }
                                getChartContainer().append(
                                        AJS.$("<p/>").append(AJS.format("<img src='__ATLASSIAN_BASE_URL__/download/resources/com.winagile.gadget.TimeGadget:TimeGadget-resources/images/blue.png' />") + 
                                        					":&nbsp;&nbsp;" +
                                        					AJS.format("__MSG_gadget.winagile.blue.icon__") + 
                                        					"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" +
                                                             AJS.format("<img src='__ATLASSIAN_BASE_URL__/download/resources/com.winagile.gadget.TimeGadget:TimeGadget-resources/images/red.png' />")+ 
                                                             ":&nbsp;&nbsp;" + 
                                                             AJS.format("__MSG_gadget.winagile.red.icon__"))
                                );
                            }();
                            if (gadgets.views.getCurrentView().getName() === "canvas") {
                                var dataTable = AJS.gadgets.templater.Table ({
                                    descriptor: function (args) {
                                        return {
                                            cols: [
                                                {header: args.statType, preSorted: true},
                                                {header: gadget.getMsg("gadget.piechart.issues"), sort: "asc"},
                                                {header: "%"}
                                            ],
                                            data: function () {
                                                var rows = [];
                                                if (args.chartData) {
                                                    AJS.$(args.chartData).each(function (i) {
                                                        rows.push([
                                                            {value: i, label: gadgets.util.escape(this.key)},
                                                            {value: gadgets.util.escape(this.value), label: gadgets.util.escape(this.value) },
                                                            {value: this.pecentage, label: this.pecentage}
                                                        ]);
                                                    });
                                                }
                                                return rows;
                                            }()
                                        };
                                    },
                                    sortable: true,
                                    args: [{key: "chartData", data: args.chart.data}, {key: "statType", data: args.chart.statType}]
                                });

                                var getDataTable = function () {
                                    return AJS.$("table.aui", gadget.getView());
                                };

                                var createCanvasDataTable = function () {
                                    dataTable.addCallback(function (fragment) {
                                        gadget.getView().append(fragment);
                                        gadget.resize();
                                    });
                                    dataTable.build();
                                };
                                // finally after the image has loaded we create the data table
                                getChartImg().load(createCanvasDataTable);
                            }
                        },
                        args: [{
                            key: "chart",
                            ajaxOptions: function () {

                                var width = Math.round(gadgets.window.getViewportDimensions().width * 0.9);
                                //canvas mode needs some more room to the right for the data table.
                                if(gadgets.views.getCurrentView().getName() === "canvas") {
                                    width = Math.round(gadgets.window.getViewportDimensions().width * 0.6);
                                }
                                if (width < 150){
                                    width = 150;
                                }
                                var height = Math.round(width*2/3);
                                
                                
                                    return {
                                        url: "/rest/myrestresource/1.0/message/generate",
                                        data:  {
                                            widthName: Math.round(width * 0.8),
                                            heightName: Math.round(height * 0.8),
                                            unitId: gadgets.util.unescapeString(this.getPref("unitId")),
                                            timeId: gadgets.util.unescapeString(this.getPref("timeId"))
                                        }
                                    };
                            }
                        }]
                    }
                });
            })();
        </script>


        ]]>
	</Content></Module>